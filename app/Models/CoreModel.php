<?php


namespace app\Models;


use app\Observers\IObserver;
use ErrorException;
use http\Exception;
use Illuminate\Database\Eloquent\Model;

abstract class CoreModel extends Model
{
    // Создавать логику ServiceProviders - крайне долго и нужно много изучать по этому я просто сделаю прослойку для
    // обсервера в этом файле

    protected ?string $observerClass = null;

    public function update(array $attributes = [], array $options = [])
    {
        if($this->observerClass !== null) {
            $beforeAttributes = $this->getAttributes();
            $class = $this->observerClass;
            /** @var IObserver $observer */
            $observer = new $class();
            $this->fill($attributes);
            if($observer->updating($this) === false) {
                return false;
            }
            $attributes = $this->getAttributes();
            $afterUpdate = parent::update($attributes, $options);

            if($observer->updated($this) === false) {
                parent::update($beforeAttributes, $options);
                return false;
            }
            return $afterUpdate;
        } else {
            return parent::update($attributes, $options);
        }
    }

    public function create($attributes = []) {
        if($this->observerClass !== null) {
            $class = $this->observerClass;
            /** @var IObserver $observer */
            $observer = new $class();
            $this->fill($attributes);
            if($observer->creating($this) === false) {
                return false;
            }
            $success  = $this->save();
            if(!$success) {
               return false;
            }
            if($observer->created($this) === false) {
                $this->delete();
                return false;
            }
            return $this;
        } else {
            return parent::create($attributes);
        }
    }

    public function delete()
    {
        return parent::delete(); // TODO: Change the autogenerated stub
    }


}
